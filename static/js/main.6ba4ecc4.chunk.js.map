{"version":3,"sources":["components/Display.js","components/Keys.js","App.js","reportWebVitals.js","index.js"],"names":["Display","value","Keys","handlesKey","className","styling","map","item","index","onClick","App","useState","displayNum","setDisplayNum","evaluate","join","newArray","shift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAOeA,EAPC,SAAC,GAAY,IAAXC,EAAU,EAAVA,MACd,OACI,8BACI,6BAAKA,OCwBFC,EA3BF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,WAmBZ,OACI,qBAAKC,UAAU,OAAf,SAnBc,CACd,CAACH,MAAO,KAAMI,QAAS,aACvB,CAACJ,MAAO,IAAKI,QAAS,aACtB,CAACJ,MAAO,IAAKI,QAAS,YACtB,CAACJ,MAAO,IAAKI,QAAS,YACtB,CAACJ,MAAO,IAAKI,QAAS,UACtB,CAACJ,MAAO,IAAKI,QAAS,UACtB,CAACJ,MAAO,IAAKI,QAAS,UACtB,CAACJ,MAAO,IAAKI,QAAS,YACtB,CAACJ,MAAO,IAAKI,QAAS,aACtB,CAACJ,MAAO,IAAKI,QAAS,aACtB,CAACJ,MAAO,IAAKI,QAAS,aACrB,CAACJ,MAAO,IAAKI,QAAS,UACvB,CAACJ,MAAO,IAAKI,QAAS,aACtB,CAACJ,MAAO,IAAKI,QAAS,aACtB,CAACJ,MAAO,IAAKI,QAAS,aACtB,CAACJ,MAAO,IAAKI,QAAS,aAIPC,KAAI,SAACC,EAAMC,GAAP,OACX,wBAAoBC,QAAU,kBAAMN,EAAWI,EAAKN,QAApD,SAA6DM,EAAKN,OAArDO,S,QCedE,MA/Bf,WACE,IAgBA,EAAoCC,mBAAS,CAAC,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,OACE,qBAAKT,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACC,cAAC,EAAD,CAASH,MAAOW,IAChB,cAAC,EAAD,CAAMT,WArBQ,SAACF,GAClB,GAAa,OAAVA,EACDY,EAAc,CAAC,SAEZ,GAAY,MAATZ,EACNY,EAAcC,YAAS,CAACF,EAAWG,KAAK,WAEtC,CACJ,IAAIC,EAAQ,sBAAOJ,GAAP,CAAmBX,IACb,IAAfe,EAAS,IACVA,EAASC,QAEXJ,EAAcG,OAUX,qBAAKZ,UAAU,wBCjBPc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6ba4ecc4.chunk.js","sourcesContent":["const Display = ({value}) =>{\r\n    return(\r\n        <div>\r\n            <h1>{value}</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Display;","const Keys = ( {handlesKey}) =>{\r\n    const keysArray = [\r\n        {value: \"AC\", styling: \"clearWide\"},\r\n        {value: \"/\", styling: \"opertator\"},\r\n        {value: \"+\", styling: \"operator\"},\r\n        {value: \"-\", styling: \"operator\"},\r\n        {value: \"1\", styling: \"number\"},\r\n        {value: \"2\", styling: \"number\"},\r\n        {value: \"3\", styling: \"number\"},\r\n        {value: \"*\", styling: \"operator\"}, \r\n        {value: \"4\", styling: \"clearWide\"},\r\n        {value: \"5\", styling: \"clearWide\"},\r\n        {value: \"6\", styling: \"clearWide\"},\r\n         {value: \"0\", styling: \"number\"},\r\n        {value: \"7\", styling: \"clearWide\"},\r\n        {value: \"8\", styling: \"clearWide\"},\r\n        {value: \"9\", styling: \"clearWide\"},\r\n        {value: \"=\", styling: \"operator\"},\r\n           ];\r\n    return (\r\n        <div className=\"keys\">\r\n            {keysArray.map((item, index) => (\r\n                <button key={index} onClick={ () => handlesKey(item.value)}>{item.value}</button>\r\n))}\r\n        </div>\r\n    )\r\n}\r\nexport default Keys;","import './App.css';\nimport Display from './components/Display';\nimport Keys from './components/Keys';\nimport {useState} from 'react'; \nimport {evaluate, median} from 'mathjs';\n\nfunction App() {\n  const handlesKey = (value) =>{\n    if(value === \"AC\"){\n      setDisplayNum([0]);\n    }\n    else if(value ===\"=\"){\n      setDisplayNum(evaluate([displayNum.join(\"\")]));\n    }\n    else{\n    let newArray = [...displayNum, value];\n    if(newArray[0]=== 0){\n      newArray.shift();\n    }\n    setDisplayNum(newArray);\n    }\n\n  }\n  const [displayNum, setDisplayNum] = useState([0])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <Display value={displayNum}/>\n       <Keys handlesKey={handlesKey}/>\n       <div className=\"buttonWrapper\">\n\n       </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}